//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IS_Test_1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IS_Test_DBEntities : DbContext
    {
        public IS_Test_DBEntities()
            : base("name=IS_Test_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
    
        public virtual int AddDocument(string doc_Name, byte[] doc_Content, string client_ID)
        {
            var doc_NameParameter = doc_Name != null ?
                new ObjectParameter("Doc_Name", doc_Name) :
                new ObjectParameter("Doc_Name", typeof(string));
    
            var doc_ContentParameter = doc_Content != null ?
                new ObjectParameter("Doc_Content", doc_Content) :
                new ObjectParameter("Doc_Content", typeof(byte[]));
    
            var client_IDParameter = client_ID != null ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDocument", doc_NameParameter, doc_ContentParameter, client_IDParameter);
        }
    
        public virtual ObjectResult<GetClientDetails_Result> GetClientDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClientDetails_Result>("GetClientDetails");
        }
    
        public virtual ObjectResult<GetDocument_Result> GetDocument(Nullable<int> doc_ID)
        {
            var doc_IDParameter = doc_ID.HasValue ?
                new ObjectParameter("Doc_ID", doc_ID) :
                new ObjectParameter("Doc_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocument_Result>("GetDocument", doc_IDParameter);
        }
    
        public virtual ObjectResult<GetDocumentForClient_Result> GetDocumentForClient(Nullable<int> client_ID)
        {
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentForClient_Result>("GetDocumentForClient", client_IDParameter);
        }
    }
}
